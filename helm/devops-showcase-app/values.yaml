application:
  deployment:
    image:
      repository: ghcr.io/roberdvs/devops-showcase-app
      tag: 0.3.0
    env:
      DB_HOST:
        value: postgresql
      DB_PORT:
        value: "5432"
      DB_USER:
        value: postgres
      DB_PASSWORD:
        value: postgres
      DB_NAME:
        value: example
    initContainers:
      - name: wait-for-database
        image: postgres:17-alpine
        env:
          - name: DB_HOST
            value: postgresql
        command: ['sh', '-c', 'until pg_isready -h $DB_HOST -p 5432 -U dummy; do echo waiting for database; sleep 2; done;']
    ports:
      - containerPort: 8000
        name: http
        protocol: TCP

    startupProbe:
      enabled: true
      httpGet:
        path: /health/ready
        port: 8000
      initialDelaySeconds: 15
      timeoutSeconds: 5
      failureThreshold: 3
      successThreshold: 1
      periodSeconds: 10
    readinessProbe:
      enabled: true
      httpGet:
        path: /health/ready
        port: 8000
      initialDelaySeconds: 10
      timeoutSeconds: 3
      failureThreshold: 3
      successThreshold: 1
      periodSeconds: 5
    livenessProbe:
      enabled: true
      httpGet:
        path: /health/live
        port: 8000
      initialDelaySeconds: 30
      timeoutSeconds: 5
      failureThreshold: 3
      successThreshold: 1
      periodSeconds: 10

  service:
    type: NodePort
    ports:
    - port: 8000
      name: http
      protocol: TCP
      targetPort: 8000

postgresql:
  # Disable PostgreSQL in-cluster deployment if using an external database like AWS RDS
  enabled: true
  global:
    postgresql:
      fullnameOverride: postgresql
      auth:
        username: postgres
        password: postgres
        database: example
