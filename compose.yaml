services:
  server:
    build: .
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/example
      # Enable Prometheus metrics
      - ENABLE_METRICS=true
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_SERVICE_NAME=sample-app
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4317
    ports:
      - 8000:8000
    # `docker compose up --watch` settings for hot reloading during development
    # https://docs.docker.com/compose/how-tos/file-watch/#compose-watch-versus-bind-mounts
    develop:
      watch:
        # Sync the working directory with the `/app` directory in the container
        - action: sync
          path: .
          target: /app
          # Exclude the project virtual environment
          ignore:
            - .venv/
        # Rebuild the image on changes to the `pyproject.toml`
        - action: rebuild
          path: ./pyproject.toml

    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:17-alpine
    restart: always
    user: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=example
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5432:5432
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  db-data:
